name: Upload Release Assets to Telegram

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Enter release tag (leave empty to use latest)"
        required: false
        default: ""

jobs:
  telegram-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Step 1: Fetch release (by tag or latest)
      - name: Get Release Info
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ github.event.inputs.tag_name }}';
            let release;
            if (tag) {
              release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag
              }).then(r => r.data).catch(() => null);
            }
            if (!release) {
              release = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo
              }).then(r => r.data);
            }

            const urls = release.assets.map(a => a.browser_download_url).join('\n');
            require('fs').writeFileSync('assets.txt', urls);
            console.log(`Found ${release.assets.length} assets.`);

      # Step 2: Upload assets one by one (with retry and logging)
      - name: Upload Assets to Telegram (Safe Mode)
        shell: bash
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ ! -s assets.txt ]; then
            echo "‚ùå No assets found to upload."
            exit 0
          fi

          echo "Starting uploads..."
          while IFS= read -r url; do
            [ -z "$url" ] && continue
            filename=$(basename "$url")
            echo "‚û°Ô∏è Processing: $filename"

            curl -L -o "$filename" "$url" || { echo "‚ùå Failed to download $filename"; continue; }

            filesize=$(stat -c%s "$filename")
            if [ "$filesize" -gt 2000000000 ]; then
              echo "‚ö†Ô∏è Skipping $filename (size > 2GB)"
              continue
            fi

            for attempt in 1 2 3; do
              echo "üì§ Upload attempt $attempt for $filename..."
              response=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                -F chat_id="${TELEGRAM_CHAT_ID}" \
                -F document=@"$filename")

              if echo "$response" | grep -q '"ok":true'; then
                echo "‚úÖ Uploaded $filename successfully."
                break
              else
                echo "‚ö†Ô∏è Upload failed: $response"
                if [ "$attempt" -eq 3 ]; then
                  echo "‚ùå Giving up on $filename after 3 attempts."
                else
                  echo "üîÅ Retrying in 10s..."
                  sleep 10
                fi
              fi
            done
          done < assets.txt

          echo "üèÅ All uploads attempted."
